[build-system]
requires = ["hatchling>=1.5"]
build-backend = "hatchling.build"

[project]
name = "jupyter-events"
description = "Jupyter Event System library"
readme = "README.md"
requires-python = ">=3.7"
authors = [
    { name = "Jupyter Development Team", email = "jupyter@googlegroups.com" },
]
keywords = [
    "Jupyter",
    "JupyterLab",
]
classifiers = [
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
]
dependencies = [
    "jsonschema[format-nongpl,format_nongpl]>=4.3.0",
    "python-json-logger",
    "pyyaml",
    "traitlets",
]
dynamic = [
    "version",
]

[project.license]
file = 'COPYING.md'

[project.urls]
Homepage = "http://jupyter.org"

[project.scripts]
jupyter-events = "jupyter_events.cli:main"

[project.optional-dependencies]
docs = [
    "jupyterlite-sphinx",
    "myst_parser",
    "pydata_sphinx_theme"
]
test = [
    "coverage",
    "pre-commit",
    "pytest-asyncio>=0.19.0",
    "pytest-console-scripts",
    "pytest-cov",
    "pytest>=7.0",
    # [cli]
    "click",
    "rich",
]
cli = [
    "click",
    "rich"
]

[tool.hatch.version]
path = "jupyter_events/_version.py"

[tool.hatch.envs.docs]
features = ["docs"]
[tool.hatch.envs.docs.scripts]
build = "make -C docs html SPHINXOPTS='-W'"

[tool.hatch.envs.test]
features = ["test"]
[tool.hatch.envs.test.scripts]
test = "python -m pytest -vv {args}"
nowarn = "test -W default {args}"

[tool.hatch.envs.cov]
features = ["test"]
dependencies = ["coverage", "pytest-cov"]
[tool.hatch.envs.cov.scripts]
test = "python -m pytest -vv --cov jupyter_events --cov-branch --cov-report term-missing:skip-covered --cov-fail-under 85 {args}"
nowarn = "test -W default {args}"

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
addopts = "-raXs --durations 10 --color=yes --doctest-modules"
testpaths = [
    "tests/"
]
asyncio_mode = "auto"
script_launch_mode = "subprocess"

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self.debug:",
  "if settings.DEBUG",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
  "class .*\bProtocol\\):",
"@(abc\\.)?abstractmethod",
]

[tool.flake8]
ignore = "E501, W503, E402"
builtins = "c, get_config"
exclude = [
    ".cache",
    ".github",
    "docs",
    "setup.py",
]
enable-extensions = "G"
extend-ignore = [
    "G001", "G002", "G004", "G200", "G201", "G202",
    # black adds spaces around ':'
    "E203",
]
per-file-ignores = [
    # B011: Do not call assert False since python -O removes these calls
    # F841 local variable 'foo' is assigned to but never used
    "tests/*: B011", "F841",
]
